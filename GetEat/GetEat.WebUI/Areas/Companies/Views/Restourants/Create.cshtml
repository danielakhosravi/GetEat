@model GetEat.WebUI.Models.RestourantViewModel
@{
    ViewBag.Title = "Create";
}

<div class="screen-bgr center-content">
    <div class="row ">
        <div class="register-form">
            <h2 class="text-center head center-content">Create restourant</h2>
          

            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <section class="form-horizontal col-md-12">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.OrganisationId)
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-4 head text-right" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "maxChars" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "col-md-4 head text-right" })
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address.Country, htmlAttributes: new { @class = "col-md-4 head text-right" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Address.Country, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address.Country, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address.City, htmlAttributes: new { @class = "col-md-4 head text-right" })

                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address.City, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address.Neighborhood, htmlAttributes: new { @class = "col-md-4 head text-right" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Address.Neighborhood, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address.Neighborhood, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address.Street, htmlAttributes: new { @class = "col-md-4 head text-right" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Address.Street, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address.Street, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address.Number, htmlAttributes: new { @class = "col-md-4 head text-right" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Address.Number, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address.Number, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address.Latitude, htmlAttributes: new { @class = "col-md-4 head text-right" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Address.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address.Latitude, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address.Longitude, htmlAttributes: new { @class = "col-md-4 head text-right" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Address.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address.Longitude, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.KitchenId, "Cuisine", htmlAttributes: new { @class = "col-md-4 head text-right" })
                        <div class="col-md-8">
                            @Html.DropDownList("KitchenId", (SelectList)ViewBag.KitchenId, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.KitchenId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="buttons">
                        <ul class="list-inline">
                            <li class=""><input type="submit" value="Create" class="btn btn-default savebtn" /></li>
                            <li class="anchorstyle">
                                @Html.ActionLink("Back to List", "Index", new { organisationId = Model.OrganisationId })
                            </li>
                        </ul>
                    </div>
                </section>

            }
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/geteat/company.js"></script>
}
